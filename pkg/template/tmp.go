package template

import (
	"strings"

	"dkforest/pkg/utils"
	humanize "github.com/dustin/go-humanize"
	"github.com/labstack/echo"
)

// GetRenderer ...
func GetRenderer(e *echo.Echo) *Templates {
	tmplBuilder := NewTemplateBuilder(e)
	tmplBuilder.AddFn("addInt", addInt)
	tmplBuilder.AddFn("add", add)
	tmplBuilder.AddFn("md5", md5)
	tmplBuilder.AddFn("css", css)
	tmplBuilder.AddFn("attr", attr)
	tmplBuilder.AddFn("safe", safe)
	tmplBuilder.AddFn("safeURL", safeURL)
	tmplBuilder.AddFn("safeJs", safeJs)
	tmplBuilder.AddFn("safeJsStr", safeJsStr)
	tmplBuilder.AddFn("BackToIP4", backtoIP4)
	tmplBuilder.AddFn("secs", secs)
	tmplBuilder.AddFn("notNil", notNil)
	tmplBuilder.AddFn("shortDurNs", shortDurNs)
	tmplBuilder.AddFn("shortDur", shortDur)
	tmplBuilder.AddFn("humanize", humanize.Time)
	tmplBuilder.AddFn("until", until)
	tmplBuilder.AddFn("formatLocal", formatLocal)
	tmplBuilder.AddFn("formatTsPtr", formatTsPtr)
	tmplBuilder.AddFn("bytes", humanize.Bytes)
	tmplBuilder.AddFn("ibytes", humanize.IBytes)
	tmplBuilder.AddFn("int64bytes", int64bytes)
	tmplBuilder.AddFn("unixNs", unixNs)
	tmplBuilder.AddFn("comma", comma)
	tmplBuilder.AddFn("intComma", intComma)
	tmplBuilder.AddFn("uint32Comma", uint32Comma)
	tmplBuilder.AddFn("uint64Comma", uint64Comma)
	tmplBuilder.AddFn("commaPtr", commaPtr)
	tmplBuilder.AddFn("dot", utils.Dot)
	tmplBuilder.AddFn("divide100", divide100)
	tmplBuilder.AddFn("divide1000", divide1000)
	tmplBuilder.AddFn("toString", toString)
	tmplBuilder.AddFn("toI64", toI64)
	tmplBuilder.AddFn("formatFloat", formatFloat)
	tmplBuilder.AddFn("success", success)
	tmplBuilder.AddFn("limitTo", limitTo)
	tmplBuilder.AddFn("DerefStr", derefStr)
	tmplBuilder.AddFn("N", n)
	tmplBuilder.AddFn("shortNum", shortNum)
	tmplBuilder.AddFn("shortNumPtr", shortNumPtr)
	tmplBuilder.AddFn("mod", mod)
	tmplBuilder.AddFn("ts", ts)
	tmplBuilder.AddFn("title", strings.Title)
	tmplBuilder.AddFn("first", first)
	tmplBuilder.AddFn("rest", rest)
	tmplBuilder.AddFn("capfirst", capfirst)
	tmplBuilder.AddFn("upper", strings.ToUpper)
	tmplBuilder.AddFn("t", translate)
	tmplBuilder.AddFn("NowOGTFmt", nowOGTFmt)
	tmplBuilder.AddFn("trimPrefix", trimPrefix)
	tmplBuilder.AddFn("Mul", mul)
	tmplBuilder.AddFn("trunc", trunc)
	tmplBuilder.AddFn("sanitize", utils.Sanitize)
	tmplBuilder.AddFn("n2br", utils.N2br)
	tmplBuilder.AddFn("dict", dict)
	tmplBuilder.AddFn("pct", pct)
	tmplBuilder.AddFn("cents", cents)
	tmplBuilder.AddFn("last4", last4)
	tmplBuilder.AddFn("toMs", toMs)
	tmplBuilder.AddFn("derefI64", derefI64)
	tmplBuilder.AddFn("derefUserID", derefUserID)
	tmplBuilder.AddFn("shortHost", shortHost)
	tmplBuilder.AddFn("b64", b64)
	tmplBuilder.AddFn("fmtBool", fmtBool)
	tmplBuilder.AddFn("isStrEmpty", isStrEmpty)
	tmplBuilder.AddFn("ms2s", ms2s)

	tmplBuilder.BuildTemplates()
	return tmplBuilder
}
