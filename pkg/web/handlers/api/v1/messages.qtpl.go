// Code generated by qtc from "messages.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line messages.qtpl:1
package v1

//line messages.qtpl:1
import "dkforest/pkg/database"

//line messages.qtpl:2
import "dkforest/pkg/managers"

//line messages.qtpl:3
import humanize "github.com/dustin/go-humanize"

//line messages.qtpl:5
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line messages.qtpl:5
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line messages.qtpl:5
func StreamGenerateStyle(qw422016 *qt422016.Writer, AuthUser *database.User, Data ChatMessagesData) {
//line messages.qtpl:5
	qw422016.N().S(`<style>
   /* http://meyerweb.com/eric/tools/css/reset/
       v2.0 | 20110126
       License: none (public domain)
    */
    html, body, div, span, applet, object, iframe,
    h1, h2, h3, h4, h5, h6, p, blockquote, pre,
    a, abbr, acronym, address, big, cite, code,
    del, dfn, em, img, ins, kbd, q, s, samp,
    small, strike, strong, sub, sup, tt, var,
    b, u, i, center,
    dl, dt, dd, ol, ul, li,
    fieldset, form, label, legend,
    table, caption, tbody, tfoot, thead, tr, th, td,
    article, aside, canvas, details, embed,
    figure, figcaption, footer, header, hgroup,
    menu, nav, output, ruby, section, summary,
    time, mark, audio, video {
        margin: 0;
        padding: 0;
        border: 0;
        font-size: 100%;
        font: inherit;
        vertical-align: baseline;
    }
    /* HTML5 display-role reset for older browsers */
    article, aside, details, figcaption, figure,
    footer, header, hgroup, menu, nav, section {
        display: block;
    }
    body {
        line-height: 1;
    }
    ol, ul {
        list-style: none;
    }
    blockquote, q {
        quotes: none;
    }
    blockquote:before, blockquote:after,
    q:before, q:after {
        content: '';
        content: none;
    }
    table {
        border-collapse: collapse;
        border-spacing: 0;
    }
    /* --- end --- */

    i { font-style: italic; }

    /* Remove button padding in FF */
    button::-moz-focus-inner {
        border:0;
        padding:0;
    }

    body { font-family: Lato,-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol"; }
    a       { color: #00bc8c; text-decoration: none; }
    a:hover { color: #007053; text-decoration: underline; }
    .unread_room       { color: #2392da; text-decoration: none; }
    .unread_room:hover { color: #004970; text-decoration: underline; }
    .emoji {
        font-family: "Noto Color Emoji", "Apple Color Emoji", "Segoe UI Emoji", Times, Symbola, Aegyptus, Code2000, Code2001, Code2002, Musica, serif, LastResort;
        font-size: 17px;
    }
    .mod-btn {
        width: 16px; height: 16px;
        margin: 0; padding: 0;
        border: 1px solid gray;
        display: inline;
        text-align: center;
        vertical-align: middle;
        user-select: none;
        background-color: #444;
        color: #ea2a2a;
        -webkit-box-shadow: 1px 1px 1px rgba(0,0,0,0.25);
        -moz-box-shadow: 1px 1px 1px rgba(0,0,0,0.25);
        -webkit-border-radius: 3px;
        -moz-border-radius: 3px;
    }
    .mod-btn:hover {
        background-color: #222;
    }
    .delete_msg_btn {
        font-size: 15px;
        line-height: 1;
    }
    @keyframes hide_btn {
        100% { visibility: hidden;  }
    }
    @keyframes orange_btn {
        99% { color: ea2a2a; } 100% { color: orange;  }
    }
    .delete_msg_btn::after { content: "Ã—"; }
    .hb_btn {
        font-size: 10px;
        line-height: 1.4;
    }
    .hb_btn::after { content: "hb"; }
    .k_btn {
        font-size: 10px;
        line-height: 1.4;
    }
    .k_btn::after { content: "k"; }
    .connection-closed {
        color: #bf2718;
        display: block;
        position: fixed;
        text-align: center;
        top: 0;
        left: calc(50% - 200px);
        width: 400px;
        z-index: 2;
        background-color: #500000;
        border: 2px solid #ff0000;
    }
    #manualrefresh {
        `)
//line messages.qtpl:125
	if !Data.ForceManualRefresh {
//line messages.qtpl:125
		qw422016.N().S(`
            top: -200%;
            animation: timeout_messages `)
//line messages.qtpl:127
		qw422016.N().DL(Data.ManualRefreshTimeout)
//line messages.qtpl:127
		qw422016.N().S(`s forwards;
        `)
//line messages.qtpl:128
	}
//line messages.qtpl:128
	qw422016.N().S(`
        color: #bf2718;
        display: block;
        position: fixed;
        text-align: center;
        left: calc(50% - 200px);
        width: 400px;
        z-index: 2;
        background-color: #500000;
        border: 2px solid #ff0000;
    }
    @keyframes timeout_messages {
        0%   { top: -200%; }
        99% { top: -200%; }
        100% { top: 0; }
    }
    .date { color: #999; font-family: 'Courier New', Courier, monospace; font-size: 14px; }
    .date-link:hover { color: #999; text-decoration: underline; }
    .sysmsg { color: #fff; font-family: 'Courier New', Courier, monospace; font-size: 14px; }
    small { font-size: 80%; font-weight: 400; }
    .msg { padding: 3px 0 3px 8px; border-bottom: 1px solid #444; color: #888; position: relative; }
    .msg p:first-of-type { display: inline; }
    strong { font-weight: bold; }
    em { font-style: italic; }
    pre { border: 1px solid #2b442b; padding: 2px; margin: 2px 0; max-height: `)
//line messages.qtpl:152
	qw422016.N().DL(AuthUser.CodeBlockHeight)
//line messages.qtpl:152
	qw422016.N().S(`px; overflow: auto; background-color: rgba(39,40,34,0.6) !important;
        font-family: SFMono-Regular,Menlo,Monaco,Consolas,"Liberation Mono","Courier New",monospace; }
    .fullscreen { position: absolute; margin-top: -19px; right: 3px; }
    code {  border: 1px solid #2b442b; color: #f92672; padding: 0 2px; margin: 0px 0; background-color: rgba(39,40,34,0.6) !important; }
    .censored { background-color: black; color: black; padding: 0 3px; }
    .censored:hover { background-color: black; color: white; }
    .censored > a { color: black; }
    .censored > a:hover { color: #007053; text-decoration: underline; }
    ul { list-style-type: disc; margin: 0 0 0 15px; }
    * {
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
    }
    .afk-indicator { color: #ff9a27; }
    .spacer16 { display: inline-block; width: 16px; }
    .spacer36 { display: inline-block; width: 36px; }
    .spacer56 { display: inline-block; width: 56px; }
    .d-inline { display: inline; }
    .o-wrap { overflow-wrap: break-word; }
    .f-def-clr { color: #888; }
    .f-orange-clr { color: orange; }
    .f-white-clr, .f-white-clr:hover { color: white; }
    .line-through { text-decoration: line-through; }
    .hb-row { background-color: rgba(0, 0, 0, 0.7); opacity: `)
//line messages.qtpl:175
	qw422016.N().F(AuthUser.GetHellbanOpacityF64())
//line messages.qtpl:175
	qw422016.N().S(`; }
    .own-highlight { background-color: rgba(255,241,176,0.05); }
    .read-marker { border-style: outset; border-top: `)
//line messages.qtpl:177
	qw422016.N().DL(AuthUser.ChatReadMarkerSize)
//line messages.qtpl:177
	qw422016.N().S(`px solid `)
//line messages.qtpl:177
	qw422016.E().S(AuthUser.ChatReadMarkerColor)
//line messages.qtpl:177
	qw422016.N().S(`; }
    #msgs { `)
//line messages.qtpl:178
	if !Data.HideRightColumn {
//line messages.qtpl:178
		qw422016.N().S(`width: calc(100% - 185px); float: left; `)
//line messages.qtpl:178
	}
//line messages.qtpl:178
	qw422016.N().S(`line-height: 1.2; }
    #no-msg { padding-left: 10px; color: #ddd; }
    #rgt-pane-w { width: 150px; height: 100%; position: fixed; right: 15px; overflow-y: auto; }
    #rgt-pane { line-height: 1.15; }
    .rgt-title { font-weight: bolder; color: #ced4da; }
    .mb-20px { margin-bottom: 20px; }
    .mb-30px { margin-bottom: 30px; }
    .mt-5px { margin-top: 5px; }
    .mt-10px { margin-top: 10px; }
    .notif, .notif:hover { color: #e74c3c; }
    #msg-err { background-color: #8f2d2d; color: #ffffff; padding: 1px 5px 2px 5px; display: block; text-decoration: none; }
    #i {
        background-color: #006400;
        width: 18px;
        height: 18px;
        position: fixed;
        top: 1px;
        right: `)
//line messages.qtpl:195
	if !Data.HideRightColumn {
//line messages.qtpl:195
		qw422016.N().S(`35px`)
//line messages.qtpl:195
	} else {
//line messages.qtpl:195
		qw422016.N().S(`8px`)
//line messages.qtpl:195
	}
//line messages.qtpl:195
	qw422016.N().S(`;
        border-radius: 9px;
        animation: i1 30s forwards;
    }
    @keyframes i1 { 0% { background-color: #006400; } 32% { background-color: #006400; } 33% { background-color: #626400; } 99% { background-color: #626400; } 100% { background-color: #8b0000; } }
    @keyframes i2 { 0% { background-color: #006400; } 32% { background-color: #006400; } 33% { background-color: #626400; } 99% { background-color: #626400; } 100% { background-color: #8b0000; } }
    @keyframes horizontal-shaking1 {
        0% { transform: translateX(0) }
        25% { transform: translateX(9px) }
        50% { transform: translateX(-9px) }
        75% { transform: translateX(9px) }
        100% { transform: translateX(0) }
    }
    @keyframes horizontal-shaking2 {
        0% { transform: translateX(0) }
        25% { transform: translateX(9px) }
        50% { transform: translateX(-9px) }
        75% { transform: translateX(9px) }
        100% { transform: translateX(0) }
    }
</style>
`)
//line messages.qtpl:216
}

//line messages.qtpl:216
func WriteGenerateStyle(qq422016 qtio422016.Writer, AuthUser *database.User, Data ChatMessagesData) {
//line messages.qtpl:216
	qw422016 := qt422016.AcquireWriter(qq422016)
//line messages.qtpl:216
	StreamGenerateStyle(qw422016, AuthUser, Data)
//line messages.qtpl:216
	qt422016.ReleaseWriter(qw422016)
//line messages.qtpl:216
}

//line messages.qtpl:216
func GenerateStyle(AuthUser *database.User, Data ChatMessagesData) string {
//line messages.qtpl:216
	qb422016 := qt422016.AcquireByteBuffer()
//line messages.qtpl:216
	WriteGenerateStyle(qb422016, AuthUser, Data)
//line messages.qtpl:216
	qs422016 := string(qb422016.B)
//line messages.qtpl:216
	qt422016.ReleaseByteBuffer(qb422016)
//line messages.qtpl:216
	return qs422016
//line messages.qtpl:216
}

//line messages.qtpl:218
func StreamMessages(qw422016 *qt422016.Writer, VERSION, CSRF, NullUsername string, AuthUser *database.User, Data ChatMessagesData) {
//line messages.qtpl:218
	qw422016.N().S(`<html lang="en">
    <head>
        <title></title>
`)
//line messages.qtpl:222
	if !Data.ChatMenuData.PreventRefresh && !Data.ForceManualRefresh {
//line messages.qtpl:222
		qw422016.N().S(`<meta http-equiv="refresh" content="`)
//line messages.qtpl:222
		qw422016.N().DL(AuthUser.RefreshRate)
//line messages.qtpl:222
		qw422016.N().S(`">`)
//line messages.qtpl:222
	}
//line messages.qtpl:223
	if AuthUser.CollectMetadata {
//line messages.qtpl:223
		qw422016.N().S(`<link rel="stylesheet" type="text/css" href="/public/css/meta.css?v=`)
//line messages.qtpl:223
		qw422016.E().S(VERSION)
//line messages.qtpl:223
		qw422016.N().S(`" />`)
//line messages.qtpl:223
	}
//line messages.qtpl:224
	StreamGenerateStyle(qw422016, AuthUser, Data)
//line messages.qtpl:224
	qw422016.N().S(`    </head>
    <body>

`)
//line messages.qtpl:228
	if Data.ForceManualRefresh {
//line messages.qtpl:228
		qw422016.N().S(`            <div id="manualrefresh">
                <h4>Manual refresh required</h4>
                <form method="get" action="/chat/`)
//line messages.qtpl:231
		qw422016.E().S(Data.ChatMenuData.RoomName)
//line messages.qtpl:231
		qw422016.N().S(`" target="_top">
                    <input type="submit" value="Reload" />
                </form>
            </div>
`)
//line messages.qtpl:235
	} else if !Data.ChatMenuData.PreventRefresh {
//line messages.qtpl:235
		qw422016.N().S(`            <div id="manualrefresh">
                <h4>Manual refresh required</h4>
                <form method="get">
                    <input type="submit" value="Reload" />
                </form>
            </div>
`)
//line messages.qtpl:242
	}
//line messages.qtpl:242
	qw422016.N().S(`
`)
//line messages.qtpl:244
	if Data.Error != "" {
//line messages.qtpl:244
		qw422016.N().S(`            <a href="/api/v1/chat/messages/`)
//line messages.qtpl:245
		qw422016.E().S(Data.ChatMenuData.RoomName)
//line messages.qtpl:245
		qw422016.N().S(`" id="msg-err">Ã— `)
//line messages.qtpl:245
		qw422016.E().S(Data.Error)
//line messages.qtpl:245
		qw422016.N().S(`</a>
`)
//line messages.qtpl:246
	}
//line messages.qtpl:246
	qw422016.N().S(`
`)
//line messages.qtpl:248
	if Data.PmSound || Data.TaggedSound {
//line messages.qtpl:248
		qw422016.N().S(`            <audio src="/public/mp3/sound5.mp3" autoplay></audio>
`)
//line messages.qtpl:250
	} else if Data.NewMessageSound {
//line messages.qtpl:250
		qw422016.N().S(`            <audio src="/public/mp3/sound6.mp3" autoplay></audio>
`)
//line messages.qtpl:252
	}
//line messages.qtpl:252
	qw422016.N().S(`
        <div id="msgs">
`)
//line messages.qtpl:255
	StreamRenderMessages(qw422016, AuthUser, Data, CSRF, NullUsername, nil, false)
//line messages.qtpl:255
	qw422016.N().S(`        </div>

        `)
//line messages.qtpl:258
	if !AuthUser.HideRightColumn {
//line messages.qtpl:258
		qw422016.N().S(`
            <div id="rgt-pane-w">
`)
//line messages.qtpl:260
		StreamRenderRightColumn(qw422016, AuthUser, Data.ChatMenuData)
//line messages.qtpl:260
		qw422016.N().S(`            </div>
`)
//line messages.qtpl:262
	}
//line messages.qtpl:263
	if AuthUser.CollectMetadata {
//line messages.qtpl:263
		qw422016.N().S(`            <div class="div_1"></div>
            <div class="div_2"></div>
            <div class="div_f0">a</div>
`)
//line messages.qtpl:267
	}
//line messages.qtpl:267
	qw422016.N().S(`    </body>
</html>
`)
//line messages.qtpl:270
}

//line messages.qtpl:270
func WriteMessages(qq422016 qtio422016.Writer, VERSION, CSRF, NullUsername string, AuthUser *database.User, Data ChatMessagesData) {
//line messages.qtpl:270
	qw422016 := qt422016.AcquireWriter(qq422016)
//line messages.qtpl:270
	StreamMessages(qw422016, VERSION, CSRF, NullUsername, AuthUser, Data)
//line messages.qtpl:270
	qt422016.ReleaseWriter(qw422016)
//line messages.qtpl:270
}

//line messages.qtpl:270
func Messages(VERSION, CSRF, NullUsername string, AuthUser *database.User, Data ChatMessagesData) string {
//line messages.qtpl:270
	qb422016 := qt422016.AcquireByteBuffer()
//line messages.qtpl:270
	WriteMessages(qb422016, VERSION, CSRF, NullUsername, AuthUser, Data)
//line messages.qtpl:270
	qs422016 := string(qb422016.B)
//line messages.qtpl:270
	qt422016.ReleaseByteBuffer(qb422016)
//line messages.qtpl:270
	return qs422016
//line messages.qtpl:270
}

//line messages.qtpl:273
func StreamRenderRightColumn(qw422016 *qt422016.Writer, AuthUser *database.User, Data ChatMenuData) {
//line messages.qtpl:273
	qw422016.N().S(`<div id="rgt-pane">
    <div class="mb-20px">
        <div class="rgt-title">Inbox (<a href="/settings/inbox" target="_top"`)
//line messages.qtpl:276
	if Data.InboxCount > 0 {
//line messages.qtpl:276
		qw422016.N().S(`class="notif"`)
//line messages.qtpl:276
	}
//line messages.qtpl:276
	qw422016.N().S(`>`)
//line messages.qtpl:276
	qw422016.N().DL(Data.InboxCount)
//line messages.qtpl:276
	qw422016.N().S(`</a>)</div>
    </div>
    <div class="mb-20px">
        <div class="rgt-title">Rooms:</div>
`)
//line messages.qtpl:280
	for _, e := range Data.OfficialRooms {
//line messages.qtpl:281
		if e.Name == "club" {
//line messages.qtpl:282
			if AuthUser.IsClubMember {
//line messages.qtpl:282
				qw422016.N().S(`                    <div><a href="/chat/club" target="_top"`)
//line messages.qtpl:283
				if e.IsUnread {
//line messages.qtpl:283
					qw422016.N().S(` class="unread_room"`)
//line messages.qtpl:283
				}
//line messages.qtpl:283
				qw422016.N().S(`>#club</a></div>
`)
//line messages.qtpl:284
			}
//line messages.qtpl:285
		} else if e.Name == "moderators" {
//line messages.qtpl:286
			if AuthUser.IsModerator() {
//line messages.qtpl:286
				qw422016.N().S(`                    <div><a href="/chat/moderators" target="_top"`)
//line messages.qtpl:287
				if e.IsUnread {
//line messages.qtpl:287
					qw422016.N().S(` class="unread_room"`)
//line messages.qtpl:287
				}
//line messages.qtpl:287
				qw422016.N().S(`>#moderators</a></div>
`)
//line messages.qtpl:288
			}
//line messages.qtpl:289
		} else {
//line messages.qtpl:289
			qw422016.N().S(`                <div><a href="/chat/`)
//line messages.qtpl:290
			qw422016.E().S(e.Name)
//line messages.qtpl:290
			qw422016.N().S(`" target="_top"`)
//line messages.qtpl:290
			if e.IsUnread {
//line messages.qtpl:290
				qw422016.N().S(` class="unread_room"`)
//line messages.qtpl:290
			}
//line messages.qtpl:290
			qw422016.N().S(`>#`)
//line messages.qtpl:290
			qw422016.E().S(e.Name)
//line messages.qtpl:290
			qw422016.N().S(`</a></div>
`)
//line messages.qtpl:291
		}
//line messages.qtpl:292
	}
//line messages.qtpl:293
	if len(Data.SubscribedRooms) > 0 {
//line messages.qtpl:293
		qw422016.N().S(`            <div class="mt-10px"></div>
`)
//line messages.qtpl:295
		for _, e := range Data.SubscribedRooms {
//line messages.qtpl:295
			qw422016.N().S(`                <div><a href="/chat/`)
//line messages.qtpl:296
			qw422016.E().S(e.Name)
//line messages.qtpl:296
			qw422016.N().S(`" target="_top"`)
//line messages.qtpl:296
			if e.IsUnread {
//line messages.qtpl:296
				qw422016.N().S(` class="unread_room"`)
//line messages.qtpl:296
			}
//line messages.qtpl:296
			qw422016.N().S(`>#`)
//line messages.qtpl:296
			qw422016.E().S(e.Name)
//line messages.qtpl:296
			qw422016.N().S(`</a></div>
`)
//line messages.qtpl:297
		}
//line messages.qtpl:298
	}
//line messages.qtpl:298
	qw422016.N().S(`        <div class="mt-5px"><a href="/rooms" target="_top">[...]</a></div>
    </div>
    <div class="mb-20px">
        <div class="rgt-title">In this room:</div>
`)
//line messages.qtpl:303
	for _, e := range Data.Members {
//line messages.qtpl:303
		qw422016.N().S(`            `)
//line messages.qtpl:304
		StreamMember(qw422016, AuthUser, Data, e)
//line messages.qtpl:304
		qw422016.N().S(`
`)
//line messages.qtpl:305
	}
//line messages.qtpl:305
	qw422016.N().S(`    </div>
`)
//line messages.qtpl:307
	if Data.VisibleMemberInChat || AuthUser.DisplayHellbanned {
//line messages.qtpl:307
		qw422016.N().S(`        <div class="mb-30px">
`)
//line messages.qtpl:309
		if len(Data.MembersInChat) > 0 {
//line messages.qtpl:309
			qw422016.N().S(`                <div class="rgt-title">In other rooms:</div>
`)
//line messages.qtpl:311
			for _, e := range Data.MembersInChat {
//line messages.qtpl:311
				qw422016.N().S(`                    `)
//line messages.qtpl:312
				StreamMember(qw422016, AuthUser, Data, e)
//line messages.qtpl:312
				qw422016.N().S(`
`)
//line messages.qtpl:313
			}
//line messages.qtpl:314
		}
//line messages.qtpl:314
		qw422016.N().S(`        </div>
`)
//line messages.qtpl:316
	}
//line messages.qtpl:316
	qw422016.N().S(`</div>
`)
//line messages.qtpl:318
}

//line messages.qtpl:318
func WriteRenderRightColumn(qq422016 qtio422016.Writer, AuthUser *database.User, Data ChatMenuData) {
//line messages.qtpl:318
	qw422016 := qt422016.AcquireWriter(qq422016)
//line messages.qtpl:318
	StreamRenderRightColumn(qw422016, AuthUser, Data)
//line messages.qtpl:318
	qt422016.ReleaseWriter(qw422016)
//line messages.qtpl:318
}

//line messages.qtpl:318
func RenderRightColumn(AuthUser *database.User, Data ChatMenuData) string {
//line messages.qtpl:318
	qb422016 := qt422016.AcquireByteBuffer()
//line messages.qtpl:318
	WriteRenderRightColumn(qb422016, AuthUser, Data)
//line messages.qtpl:318
	qs422016 := string(qb422016.B)
//line messages.qtpl:318
	qt422016.ReleaseByteBuffer(qb422016)
//line messages.qtpl:318
	return qs422016
//line messages.qtpl:318
}

//line messages.qtpl:320
func StreamRenderMessages(qw422016 *qt422016.Writer, AuthUser database.IUserRenderMessage, Data ChatMessagesData, CSRF, NullUsername string, readMarkerRev *int, isEdit bool) {
//line messages.qtpl:322
	baseTopBarURL := "/api/v1/chat/top-bar/" + Data.ChatMenuData.RoomName
	readMarkerRendered := false
	isFirstMsg := true

//line messages.qtpl:326
	for idx, e := range Data.Messages {
//line messages.qtpl:327
		StreamRenderMessage(qw422016, idx, e, AuthUser, Data, baseTopBarURL, &readMarkerRendered, &isFirstMsg, CSRF, NullUsername, readMarkerRev, isEdit)
//line messages.qtpl:327
		qw422016.N().S(`    `)
//line messages.qtpl:328
	}
//line messages.qtpl:328
	qw422016.N().S(`
    `)
//line messages.qtpl:329
	if len(Data.Messages) == 0 {
//line messages.qtpl:329
		qw422016.N().S(`
        <div id="no-msg"><em>No message yet</em></div>
    `)
//line messages.qtpl:331
	}
//line messages.qtpl:331
	qw422016.N().S(`
`)
//line messages.qtpl:332
}

//line messages.qtpl:332
func WriteRenderMessages(qq422016 qtio422016.Writer, AuthUser database.IUserRenderMessage, Data ChatMessagesData, CSRF, NullUsername string, readMarkerRev *int, isEdit bool) {
//line messages.qtpl:332
	qw422016 := qt422016.AcquireWriter(qq422016)
//line messages.qtpl:332
	StreamRenderMessages(qw422016, AuthUser, Data, CSRF, NullUsername, readMarkerRev, isEdit)
//line messages.qtpl:332
	qt422016.ReleaseWriter(qw422016)
//line messages.qtpl:332
}

//line messages.qtpl:332
func RenderMessages(AuthUser database.IUserRenderMessage, Data ChatMessagesData, CSRF, NullUsername string, readMarkerRev *int, isEdit bool) string {
//line messages.qtpl:332
	qb422016 := qt422016.AcquireByteBuffer()
//line messages.qtpl:332
	WriteRenderMessages(qb422016, AuthUser, Data, CSRF, NullUsername, readMarkerRev, isEdit)
//line messages.qtpl:332
	qs422016 := string(qb422016.B)
//line messages.qtpl:332
	qt422016.ReleaseByteBuffer(qb422016)
//line messages.qtpl:332
	return qs422016
//line messages.qtpl:332
}

//line messages.qtpl:334
func StreamRenderMessage(qw422016 *qt422016.Writer, idx int, e database.ChatMessage, AuthUser database.IUserRenderMessage,
	Data ChatMessagesData, baseTopBarURL string, readMarkerRendered, isFirstMsg *bool, CSRF, NullUsername string, readMarkerRev *int, isEdit bool) {
//line messages.qtpl:336
	if e.UserCanSee(AuthUser) {
//line messages.qtpl:337
		if AuthUser.GetChatReadMarkerEnabled() && e.CreatedAt.Before(Data.ReadMarker.ReadAt) && !*readMarkerRendered && !isEdit {
//line messages.qtpl:337
			qw422016.N().S(`
            <div class="read-marker read-marker-0"`)
//line messages.qtpl:338
			if idx == 0 {
//line messages.qtpl:338
				qw422016.N().S(` style="display:none;"`)
//line messages.qtpl:338
			}
//line messages.qtpl:338
			qw422016.N().S(`></div>
`)
//line messages.qtpl:339
			*readMarkerRendered = true

//line messages.qtpl:340
		} else if AuthUser.GetChatReadMarkerEnabled() && e.CreatedAt.After(Data.ReadMarker.ReadAt) && !*readMarkerRendered && isEdit && readMarkerRev != nil {
//line messages.qtpl:340
			qw422016.N().S(`            <style>.read-marker-`)
//line messages.qtpl:341
			qw422016.N().D((*readMarkerRev))
//line messages.qtpl:341
			qw422016.N().S(`{display:none !important;}</style>
`)
//line messages.qtpl:342
			*readMarkerRev++

//line messages.qtpl:342
			qw422016.N().S(`            <div class="read-marker read-marker-`)
//line messages.qtpl:343
			qw422016.N().D(*readMarkerRev)
//line messages.qtpl:343
			qw422016.N().S(`"></div>
`)
//line messages.qtpl:344
			*readMarkerRendered = true

//line messages.qtpl:344
			qw422016.N().S(`        `)
//line messages.qtpl:345
		}
//line messages.qtpl:345
		qw422016.N().S(`
        <div id="msgid-`)
//line messages.qtpl:346
		qw422016.E().S(e.UUID)
//line messages.qtpl:346
		qw422016.N().S(`" class="msgidc-`)
//line messages.qtpl:346
		qw422016.E().S(e.UUID)
//line messages.qtpl:346
		qw422016.N().S(`-`)
//line messages.qtpl:346
		qw422016.N().DL(e.Rev)
//line messages.qtpl:346
		qw422016.N().S(` msg
`)
//line messages.qtpl:347
		if (e.User.IsHellbanned || e.IsHellbanned) && AuthUser.GetDisplayHellbanned() {
//line messages.qtpl:347
			qw422016.N().S(` hb-row
`)
//line messages.qtpl:348
		} else if AuthUser.GetID() == e.User.ID && AuthUser.GetHighlightOwnMessages() {
//line messages.qtpl:348
			qw422016.N().S(` own-highlight`)
//line messages.qtpl:348
		}
//line messages.qtpl:348
		qw422016.N().S(`        ">
`)
//line messages.qtpl:350
		if e.UserCanDelete(AuthUser) {
//line messages.qtpl:351
			if AuthUser.GetDisplayDeleteButton() {
//line messages.qtpl:352
				if e.TooOldToDelete() {
//line messages.qtpl:352
					qw422016.N().S(`                        <button id="btn_delete_`)
//line messages.qtpl:353
					qw422016.E().S(e.UUID)
//line messages.qtpl:353
					qw422016.N().S(`" class="mod-btn delete_msg_btn f-orange-clr" title="delete"></button>
`)
//line messages.qtpl:354
				} else {
//line messages.qtpl:354
					qw422016.N().S(`                        <button id="btn_delete_`)
//line messages.qtpl:355
					qw422016.E().S(e.UUID)
//line messages.qtpl:355
					qw422016.N().S(`" class="mod-btn delete_msg_btn" title="delete"
                            style="
`)
//line messages.qtpl:357
					if string(e.User.Username) != NullUsername {
//line messages.qtpl:358
						if (AuthUser.IsModerator() && e.UserID != AuthUser.GetID()) || AuthUser.GetIsAdmin() || e.IsRoomOwner(AuthUser.GetID()) {
//line messages.qtpl:358
							qw422016.N().S(`                                    animation: `)
//line messages.qtpl:359
							qw422016.N().DL(e.DeleteSecondsRemaining())
//line messages.qtpl:359
							qw422016.N().S(`s 1s forwards orange_btn;
`)
//line messages.qtpl:360
						} else {
//line messages.qtpl:360
							qw422016.N().S(`                                    animation: `)
//line messages.qtpl:361
							qw422016.N().DL(e.DeleteSecondsRemaining())
//line messages.qtpl:361
							qw422016.N().S(`s 1s forwards hide_btn;
`)
//line messages.qtpl:362
						}
//line messages.qtpl:363
					}
//line messages.qtpl:363
					qw422016.N().S(`                            "
                            ></button>
`)
//line messages.qtpl:366
				}
//line messages.qtpl:366
				qw422016.N().S(`                    <style>#btn_delete_`)
//line messages.qtpl:367
				qw422016.E().S(e.UUID)
//line messages.qtpl:367
				qw422016.N().S(`:active { background-image: url('/api/v1/chat/messages/delete/`)
//line messages.qtpl:367
				qw422016.E().S(e.UUID)
//line messages.qtpl:367
				qw422016.N().S(`'); }</style>
`)
//line messages.qtpl:368
			}
//line messages.qtpl:369
			if AuthUser.IsModerator() {
//line messages.qtpl:370
				if !e.OwnMessage(AuthUser.GetID()) {
//line messages.qtpl:371
					if AuthUser.GetDisplayHellbanButton() {
//line messages.qtpl:372
						if string(e.User.Username) == NullUsername {
//line messages.qtpl:372
							qw422016.N().S(`                                <div class="spacer16"></div>
`)
//line messages.qtpl:374
						} else {
//line messages.qtpl:375
							if e.User.IsHellbanned {
//line messages.qtpl:375
								qw422016.N().S(`                                    <form method="post" action="/api/v1/users/`)
//line messages.qtpl:376
								qw422016.E().S(e.UserID.String())
//line messages.qtpl:376
								qw422016.N().S(`/unhellban" class="d-inline">
                                        <input type="hidden" name="csrf" value="`)
//line messages.qtpl:377
								qw422016.E().S(CSRF)
//line messages.qtpl:377
								qw422016.N().S(`" />
                                        <button class="mod-btn hb_btn f-orange-clr line-through" title="unhellban"></button>
                                    </form>
`)
//line messages.qtpl:380
							} else {
//line messages.qtpl:380
								qw422016.N().S(`                                    <form method="post" action="/api/v1/users/`)
//line messages.qtpl:381
								qw422016.E().S(e.UserID.String())
//line messages.qtpl:381
								qw422016.N().S(`/hellban" class="d-inline">
                                        <input type="hidden" name="csrf" value="`)
//line messages.qtpl:382
								qw422016.E().S(CSRF)
//line messages.qtpl:382
								qw422016.N().S(`" />
                                        <button class="mod-btn hb_btn f-orange-clr" title="hellban"></button>
                                    </form>
`)
//line messages.qtpl:385
							}
//line messages.qtpl:386
						}
//line messages.qtpl:387
					}
//line messages.qtpl:388
					if AuthUser.GetDisplayKickButton() {
//line messages.qtpl:388
						qw422016.N().S(`                            <form method="post" action="/api/v1/users/`)
//line messages.qtpl:389
						qw422016.E().S(e.UserID.String())
//line messages.qtpl:389
						qw422016.N().S(`/kick" class="d-inline">
                                <input type="hidden" name="csrf" value="`)
//line messages.qtpl:390
						qw422016.E().S(CSRF)
//line messages.qtpl:390
						qw422016.N().S(`" />
                                <button class="mod-btn k_btn f-orange-clr" title="kick"></button>
                            </form>
`)
//line messages.qtpl:393
					}
//line messages.qtpl:394
				} else {
//line messages.qtpl:395
					if AuthUser.GetDisplayKickButton() && AuthUser.GetDisplayHellbanButton() {
//line messages.qtpl:395
						qw422016.N().S(`                            <div class="spacer36"></div>
`)
//line messages.qtpl:397
					} else if AuthUser.GetDisplayKickButton() || AuthUser.GetDisplayHellbanButton() {
//line messages.qtpl:397
						qw422016.N().S(`                            <div class="spacer16"></div>
`)
//line messages.qtpl:399
					}
//line messages.qtpl:400
				}
//line messages.qtpl:401
			}
//line messages.qtpl:402
		} else {
//line messages.qtpl:403
			if Data.NbButtons == 3 {
//line messages.qtpl:403
				qw422016.N().S(`                    <div class="spacer56"></div>
`)
//line messages.qtpl:405
			} else if Data.NbButtons == 2 {
//line messages.qtpl:405
				qw422016.N().S(`                    <div class="spacer36"></div>
`)
//line messages.qtpl:407
			} else if Data.NbButtons == 1 {
//line messages.qtpl:407
				qw422016.N().S(`                    <div class="spacer16"></div>
`)
//line messages.qtpl:409
			}
//line messages.qtpl:410
		}
//line messages.qtpl:411
		if !Data.HideTimestamps {
//line messages.qtpl:411
			qw422016.N().S(`                <a href="`)
//line messages.qtpl:412
			qw422016.E().S(baseTopBarURL)
//line messages.qtpl:412
			qw422016.N().S(`?quote=`)
//line messages.qtpl:412
			qw422016.E().S(e.UUID)
//line messages.qtpl:412
			streamunesc(qw422016, Data.TopBarQueryParams)
//line messages.qtpl:412
			qw422016.N().S(`" target="iframe1" class="date date-link" title="`)
//line messages.qtpl:412
			qw422016.E().S(e.CreatedAt.Format("01-02 15:04:05"))
//line messages.qtpl:412
			if *isFirstMsg {
//line messages.qtpl:412
				qw422016.N().S(` (`)
//line messages.qtpl:412
				qw422016.E().S(humanize.Time(e.CreatedAt))
//line messages.qtpl:412
				qw422016.N().S(`)`)
//line messages.qtpl:412
			}
//line messages.qtpl:412
			qw422016.N().S(`">`)
//line messages.qtpl:412
			qw422016.E().S(e.CreatedAt.Format(AuthUser.GetDateFormat()))
//line messages.qtpl:412
			qw422016.N().S(`</a>
                `)
//line messages.qtpl:413
			*isFirstMsg = false

//line messages.qtpl:413
			qw422016.N().S(`
`)
//line messages.qtpl:414
		}
//line messages.qtpl:414
		qw422016.N().S(`            <a href="/u/`)
//line messages.qtpl:415
		qw422016.E().S(string(e.GetProfile(AuthUser.GetID())))
//line messages.qtpl:415
		qw422016.N().S(`" target="_blank" class="f-def-clr">-</a>
`)
//line messages.qtpl:416
		if e.System {
//line messages.qtpl:416
			qw422016.N().S(`                <span class="sysmsg">`)
//line messages.qtpl:417
			streamunesc(qw422016, e.Message)
//line messages.qtpl:417
			qw422016.N().S(`</span>
`)
//line messages.qtpl:418
		} else {
//line messages.qtpl:419
			if e.Moderators {
//line messages.qtpl:419
				qw422016.N().S(`<span class="sysmsg">[<a href="`)
//line messages.qtpl:419
				qw422016.E().S(baseTopBarURL)
//line messages.qtpl:419
				qw422016.N().S(`?m=1`)
//line messages.qtpl:419
				streamunesc(qw422016, Data.TopBarQueryParams)
//line messages.qtpl:419
				qw422016.N().S(`" target="iframe1" class="sysmsg f-white-clr">M</a>]</span>&nbsp;`)
//line messages.qtpl:419
			}
//line messages.qtpl:420
			if e.GroupID != nil {
//line messages.qtpl:420
				qw422016.N().S(`<span class="sysmsg">[<a href="`)
//line messages.qtpl:420
				qw422016.E().S(baseTopBarURL)
//line messages.qtpl:420
				qw422016.N().S(`?g=`)
//line messages.qtpl:420
				qw422016.E().S(e.Group.Name)
//line messages.qtpl:420
				streamunesc(qw422016, Data.TopBarQueryParams)
//line messages.qtpl:420
				qw422016.N().S(`" target="iframe1" class="sysmsg f-white-clr">`)
//line messages.qtpl:420
				qw422016.E().S(e.Group.Name)
//line messages.qtpl:420
				qw422016.N().S(`</a>]</span>&nbsp;`)
//line messages.qtpl:420
			}
//line messages.qtpl:421
			if e.ToUserID != nil {
//line messages.qtpl:421
				qw422016.N().S(`                    [`)
//line messages.qtpl:422
				streamfromUsername(qw422016, AuthUser, Data, e, baseTopBarURL)
//line messages.qtpl:422
				qw422016.N().S(`                    â†’
`)
//line messages.qtpl:424
				if e.ToUser.ID == AuthUser.GetID() {
//line messages.qtpl:424
					qw422016.N().S(`<span `)
//line messages.qtpl:424
					streamunesc(qw422016, e.ToUser.GenerateChatStyle())
//line messages.qtpl:424
					qw422016.N().S(`>`)
//line messages.qtpl:424
					qw422016.E().S(string(e.ToUser.Username))
//line messages.qtpl:424
					qw422016.N().S(`</span>`)
//line messages.qtpl:424
				} else {
//line messages.qtpl:424
					qw422016.N().S(`<a `)
//line messages.qtpl:424
					streamunesc(qw422016, e.ToUser.GenerateChatStyle())
//line messages.qtpl:424
					qw422016.N().S(` href="`)
//line messages.qtpl:424
					qw422016.E().S(baseTopBarURL)
//line messages.qtpl:424
					qw422016.N().S(`?pm=`)
//line messages.qtpl:424
					qw422016.E().S(string(e.ToUser.Username))
//line messages.qtpl:424
					qw422016.E().S(Data.TopBarQueryParams)
//line messages.qtpl:424
					qw422016.N().S(`" target="iframe1">`)
//line messages.qtpl:424
					qw422016.E().S(string(e.ToUser.Username))
//line messages.qtpl:424
					qw422016.N().S(`</a>`)
//line messages.qtpl:424
				}
//line messages.qtpl:424
				qw422016.N().S(`] -
`)
//line messages.qtpl:425
			} else {
//line messages.qtpl:426
				streamfromUsername(qw422016, AuthUser, Data, e, baseTopBarURL)
//line messages.qtpl:427
				if !e.IsMe() {
//line messages.qtpl:428
					if AuthUser.CanSeeHB() && (e.IsHellbanned || e.User.IsHellbanned) && (e.ToUserID == nil) {
//line messages.qtpl:428
						qw422016.N().S(`                            <a href="`)
//line messages.qtpl:429
						qw422016.E().S(baseTopBarURL)
//line messages.qtpl:429
						qw422016.N().S(`?hbm=1`)
//line messages.qtpl:429
						streamunesc(qw422016, Data.TopBarQueryParams)
//line messages.qtpl:429
						qw422016.N().S(`" target="iframe1" class="f-def-clr">-</a>
`)
//line messages.qtpl:430
					} else {
//line messages.qtpl:430
						qw422016.N().S(`                            -
`)
//line messages.qtpl:432
					}
//line messages.qtpl:433
				}
//line messages.qtpl:434
			}
//line messages.qtpl:434
			qw422016.N().S(`                <span `)
//line messages.qtpl:435
			streamunesc(qw422016, e.User.GenerateChatStyle())
//line messages.qtpl:435
			qw422016.N().S(`><span class="o-wrap">`)
//line messages.qtpl:435
			qw422016.N().S(unesc(e.MsgToDisplay(AuthUser)))
//line messages.qtpl:435
			qw422016.N().S(`</span></span>
`)
//line messages.qtpl:436
		}
//line messages.qtpl:436
		qw422016.N().S(`        </div>
`)
//line messages.qtpl:438
	}
//line messages.qtpl:439
}

//line messages.qtpl:439
func WriteRenderMessage(qq422016 qtio422016.Writer, idx int, e database.ChatMessage, AuthUser database.IUserRenderMessage,
	Data ChatMessagesData, baseTopBarURL string, readMarkerRendered, isFirstMsg *bool, CSRF, NullUsername string, readMarkerRev *int, isEdit bool) {
//line messages.qtpl:439
	qw422016 := qt422016.AcquireWriter(qq422016)
//line messages.qtpl:439
	StreamRenderMessage(qw422016, idx, e, AuthUser, Data, baseTopBarURL, readMarkerRendered, isFirstMsg, CSRF, NullUsername, readMarkerRev, isEdit)
//line messages.qtpl:439
	qt422016.ReleaseWriter(qw422016)
//line messages.qtpl:439
}

//line messages.qtpl:439
func RenderMessage(idx int, e database.ChatMessage, AuthUser database.IUserRenderMessage,
	Data ChatMessagesData, baseTopBarURL string, readMarkerRendered, isFirstMsg *bool, CSRF, NullUsername string, readMarkerRev *int, isEdit bool) string {
//line messages.qtpl:439
	qb422016 := qt422016.AcquireByteBuffer()
//line messages.qtpl:439
	WriteRenderMessage(qb422016, idx, e, AuthUser, Data, baseTopBarURL, readMarkerRendered, isFirstMsg, CSRF, NullUsername, readMarkerRev, isEdit)
//line messages.qtpl:439
	qs422016 := string(qb422016.B)
//line messages.qtpl:439
	qt422016.ReleaseByteBuffer(qb422016)
//line messages.qtpl:439
	return qs422016
//line messages.qtpl:439
}

//line messages.qtpl:442
func StreamMember(qw422016 *qt422016.Writer, AuthUser *database.User, Data ChatMenuData, El managers.UserInfo) {
//line messages.qtpl:442
	qw422016.N().S(`
`)
//line messages.qtpl:443
	baseTopBarURL := "/api/v1/chat/top-bar/" + Data.RoomName

//line messages.qtpl:444
	if El.Username == AuthUser.GetUsername() {
//line messages.qtpl:444
		qw422016.N().S(`        <div>
            <span style="color: `)
//line messages.qtpl:446
		qw422016.E().S(El.Color)
//line messages.qtpl:446
		qw422016.N().S(`;">`)
//line messages.qtpl:446
		qw422016.E().S(string(El.Username))
//line messages.qtpl:446
		qw422016.N().S(`</span>
`)
//line messages.qtpl:447
		if El.AfkIndicatorEnabled {
//line messages.qtpl:447
			qw422016.N().S(`                <small class="afk-indicator">afk</small>
`)
//line messages.qtpl:449
		}
//line messages.qtpl:449
		qw422016.N().S(`        </div>
`)
//line messages.qtpl:451
	} else {
//line messages.qtpl:452
		if !El.IsHellbanned || AuthUser.GetID() == El.UserID || (El.IsHellbanned && AuthUser.GetIsHellbanned()) || AuthUser.GetDisplayHellbanned() {
//line messages.qtpl:452
			qw422016.N().S(`            <div>
`)
//line messages.qtpl:454
			tagType := "tag"

//line messages.qtpl:455
			if AuthUser.CanSeeHB() && El.IsHellbanned {
//line messages.qtpl:456
				tagType = "htag"

//line messages.qtpl:457
			}
//line messages.qtpl:458
			qw422016.N().S(`<a href="`)
//line messages.qtpl:459
			qw422016.E().S(baseTopBarURL)
//line messages.qtpl:459
			qw422016.N().S(`?`)
//line messages.qtpl:459
			qw422016.E().S(tagType)
//line messages.qtpl:459
			qw422016.N().S(`=`)
//line messages.qtpl:459
			qw422016.E().S(string(El.Username))
//line messages.qtpl:459
			streamunesc(qw422016, Data.TopBarQueryParams)
//line messages.qtpl:459
			qw422016.N().S(`"target="iframe1"`)
//line messages.qtpl:461
			if El.IsHellbanned && AuthUser.GetDisplayHellbanned() {
//line messages.qtpl:461
				qw422016.N().S(`class="hb-row"`)
//line messages.qtpl:461
			}
//line messages.qtpl:461
			qw422016.N().S(`style="color:`)
//line messages.qtpl:462
			qw422016.E().S(El.Color)
//line messages.qtpl:462
			qw422016.N().S(`;">`)
//line messages.qtpl:462
			qw422016.E().S(string(El.Username[0]))
//line messages.qtpl:462
			qw422016.N().S(`</a><a href="`)
//line messages.qtpl:463
			qw422016.E().S(baseTopBarURL)
//line messages.qtpl:463
			qw422016.N().S(`?pm=`)
//line messages.qtpl:463
			qw422016.E().S(string(El.Username))
//line messages.qtpl:463
			streamunesc(qw422016, Data.TopBarQueryParams)
//line messages.qtpl:463
			qw422016.N().S(`"target="iframe1"`)
//line messages.qtpl:465
			if El.IsHellbanned && AuthUser.GetDisplayHellbanned() {
//line messages.qtpl:465
				qw422016.N().S(`class="hb-row"`)
//line messages.qtpl:465
			}
//line messages.qtpl:465
			qw422016.N().S(`style="color:`)
//line messages.qtpl:466
			qw422016.E().S(El.Color)
//line messages.qtpl:466
			qw422016.N().S(`;">`)
//line messages.qtpl:466
			qw422016.E().S(string(El.Username[1 : len(El.Username)-1]))
//line messages.qtpl:466
			qw422016.N().S(`</a><a href="/u/`)
//line messages.qtpl:467
			qw422016.E().S(string(El.Username))
//line messages.qtpl:467
			qw422016.N().S(`"rel="noopener noreferrer" target="_blank"`)
//line messages.qtpl:469
			if El.IsHellbanned && AuthUser.GetDisplayHellbanned() {
//line messages.qtpl:469
				qw422016.N().S(`class="hb-row"`)
//line messages.qtpl:469
			}
//line messages.qtpl:469
			qw422016.N().S(`style="color:`)
//line messages.qtpl:470
			qw422016.E().S(El.Color)
//line messages.qtpl:470
			qw422016.N().S(`;">`)
//line messages.qtpl:470
			qw422016.E().S(string(El.Username[len(El.Username)-1]))
//line messages.qtpl:470
			qw422016.N().S(`</a>`)
//line messages.qtpl:472
			if El.AfkIndicatorEnabled {
//line messages.qtpl:472
				qw422016.N().S(`                    <small class="afk-indicator">afk</small>
`)
//line messages.qtpl:474
			}
//line messages.qtpl:474
			qw422016.N().S(`            </div>
`)
//line messages.qtpl:476
		}
//line messages.qtpl:477
	}
//line messages.qtpl:478
}

//line messages.qtpl:478
func WriteMember(qq422016 qtio422016.Writer, AuthUser *database.User, Data ChatMenuData, El managers.UserInfo) {
//line messages.qtpl:478
	qw422016 := qt422016.AcquireWriter(qq422016)
//line messages.qtpl:478
	StreamMember(qw422016, AuthUser, Data, El)
//line messages.qtpl:478
	qt422016.ReleaseWriter(qw422016)
//line messages.qtpl:478
}

//line messages.qtpl:478
func Member(AuthUser *database.User, Data ChatMenuData, El managers.UserInfo) string {
//line messages.qtpl:478
	qb422016 := qt422016.AcquireByteBuffer()
//line messages.qtpl:478
	WriteMember(qb422016, AuthUser, Data, El)
//line messages.qtpl:478
	qs422016 := string(qb422016.B)
//line messages.qtpl:478
	qt422016.ReleaseByteBuffer(qb422016)
//line messages.qtpl:478
	return qs422016
//line messages.qtpl:478
}

//line messages.qtpl:481
func streamfromUsername(qw422016 *qt422016.Writer, AuthUser database.IUserRenderMessage, Data ChatMessagesData, El database.ChatMessage, baseTopBarURL string) {
//line messages.qtpl:482
	tagType := "tag"

//line messages.qtpl:483
	if El.ToUserID != nil {
//line messages.qtpl:484
		tagType = "pm"

//line messages.qtpl:485
	} else if AuthUser.CanSeeHB() && (El.IsHellbanned || El.User.IsHellbanned) {
//line messages.qtpl:486
		tagType = "htag"

//line messages.qtpl:487
	} else if AuthUser.IsModerator() && El.Moderators {
//line messages.qtpl:488
		tagType = "mtag"

//line messages.qtpl:489
	}
//line messages.qtpl:490
	if El.User.ID == AuthUser.GetID() {
//line messages.qtpl:491
		if El.CanBeEdited() {
//line messages.qtpl:491
			qw422016.N().S(`<a `)
//line messages.qtpl:491
			streamunesc(qw422016, El.User.GenerateChatStyle())
//line messages.qtpl:491
			qw422016.N().S(` href="`)
//line messages.qtpl:491
			qw422016.E().S(baseTopBarURL)
//line messages.qtpl:491
			qw422016.N().S(`?e=`)
//line messages.qtpl:491
			qw422016.E().S(El.CreatedAt.Format("15:04:05"))
//line messages.qtpl:491
			streamunesc(qw422016, Data.TopBarQueryParams)
//line messages.qtpl:491
			qw422016.N().S(`" target="iframe1">`)
//line messages.qtpl:491
			qw422016.E().S(string(El.User.Username))
//line messages.qtpl:491
			qw422016.N().S(`</a>`)
//line messages.qtpl:491
		} else {
//line messages.qtpl:491
			qw422016.N().S(`<span `)
//line messages.qtpl:491
			streamunesc(qw422016, El.User.GenerateChatStyle())
//line messages.qtpl:491
			qw422016.N().S(`>`)
//line messages.qtpl:491
			qw422016.E().S(string(El.User.Username))
//line messages.qtpl:491
			qw422016.N().S(`</span>`)
//line messages.qtpl:491
		}
//line messages.qtpl:492
	} else {
//line messages.qtpl:492
		qw422016.N().S(`<a `)
//line messages.qtpl:492
		streamunesc(qw422016, El.User.GenerateChatStyle())
//line messages.qtpl:492
		qw422016.N().S(` href="`)
//line messages.qtpl:492
		qw422016.E().S(baseTopBarURL)
//line messages.qtpl:492
		qw422016.N().S(`?`)
//line messages.qtpl:492
		qw422016.E().S(tagType)
//line messages.qtpl:492
		qw422016.N().S(`=`)
//line messages.qtpl:492
		qw422016.E().S(string(El.User.Username))
//line messages.qtpl:492
		streamunesc(qw422016, Data.TopBarQueryParams)
//line messages.qtpl:492
		qw422016.N().S(`" target="iframe1">`)
//line messages.qtpl:492
		qw422016.E().S(string(El.User.Username))
//line messages.qtpl:492
		qw422016.N().S(`</a>`)
//line messages.qtpl:492
	}
//line messages.qtpl:493
}

//line messages.qtpl:493
func writefromUsername(qq422016 qtio422016.Writer, AuthUser database.IUserRenderMessage, Data ChatMessagesData, El database.ChatMessage, baseTopBarURL string) {
//line messages.qtpl:493
	qw422016 := qt422016.AcquireWriter(qq422016)
//line messages.qtpl:493
	streamfromUsername(qw422016, AuthUser, Data, El, baseTopBarURL)
//line messages.qtpl:493
	qt422016.ReleaseWriter(qw422016)
//line messages.qtpl:493
}

//line messages.qtpl:493
func fromUsername(AuthUser database.IUserRenderMessage, Data ChatMessagesData, El database.ChatMessage, baseTopBarURL string) string {
//line messages.qtpl:493
	qb422016 := qt422016.AcquireByteBuffer()
//line messages.qtpl:493
	writefromUsername(qb422016, AuthUser, Data, El, baseTopBarURL)
//line messages.qtpl:493
	qs422016 := string(qb422016.B)
//line messages.qtpl:493
	qt422016.ReleaseByteBuffer(qb422016)
//line messages.qtpl:493
	return qs422016
//line messages.qtpl:493
}
